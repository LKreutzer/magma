---
name: agw-workflow

on:
  workflow_dispatch:


env:
  DEVCONTAINER_IMAGE: "ghcr.io/magma/magma/devcontainer:latest"
  BAZEL_BASE_IMAGE: "ghcr.io/magma/magma/bazel-base:latest"
  CACHE_KEY: bazel-base-image

jobs:
  lte-test:
    name: lte test job
    runs-on: ubuntu-latest
    env:
      MAGMA_ROOT: "${{ github.workspace }}"
      CODEGEN_ROOT: "${{ github.workspace }}/.codegen"
      PYTHON_BUILD: "${{ github.workspace }}/build"
      PYTHONPATH: "${{ github.workspace }}"
      PIP_CACHE_HOME: "${{ github.workspace }}/.pipcache"
      SWAGGER_CODEGEN_JAR: "${{ github.workspace }}/.codegen/swagger-codegen-cli.jar"
      MAGMA_DEV_MODE: 1
      SKIP_SUDO_TESTS: 1
    steps:
      - uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e # pin@v2
      - uses: actions/setup-python@7f80679172b057fc5e90d70d197929d454754a5a # pin@v2
        with:
          python-version: '3.8.10'
      - name: Run apt-focal-install-aioeventlet
        run: |
          cd nms
          # Install python3-aioeventlet from the magma apt repo
          cat ${{ env.MAGMA_ROOT }}/orc8r/tools/ansible/roles/pkgrepo/files/jfrog.pub | sudo -E apt-key add -
          echo "deb https://artifactory.magmacore.org/artifactory/debian-test focal-ci main" | sudo -E tee /etc/apt/sources.list.d/fbc.list
          sudo apt-get update -y
          sudo apt-get install -y python3-aioeventlet
          sudo rm -rf /var/lib/apt/lists/*
      - name: Install libraries and dependecies
        run: |
          mkdir -p /var/tmp/test_results
          mkdir -p /var/tmp/codecovs
          sudo -E apt-get update -y
          sudo -E apt-get install -y libsystemd-dev pkg-config curl zip unzip net-tools
          sudo -E apt-get install -y virtualenv python-babel python-dev build-essential autogen autoconf libtool python3-apt python3-requests python3-pip python-protobuf
      - name: Setup protoc3
        run: |
          pip3 install protobuf
          pip3 install setuptools==49.6.0
          curl -Lfs https://github.com/protocolbuffers/protobuf/releases/download/v3.1.0/protoc-3.1.0-linux-x86_64.zip -o protoc3.zip
          unzip protoc3.zip -d protoc3
          sudo -E mv protoc3/bin/protoc /bin/protoc
          sudo -E chmod a+rx /bin/protoc
          # Workaround: the include files need to be found
          mv ./protoc3/include/google .
          sudo -E rm -rf protoc3.zip protoc3
      - name: Setup Swagger
        run: |
          mkdir ${{ env.CODEGEN_ROOT }}
          wget https://repo1.maven.org/maven2/io/swagger/swagger-codegen-cli/2.2.3/swagger-codegen-cli-2.2.3.jar -O ${{ env.SWAGGER_CODEGEN_JAR }}
      - name: Execute test_all
        run: |
          make -C ${{ env.MAGMA_ROOT }}/lte/gateway/python test_all
      - uses: codecov/codecov-action@f32b3a3741e1053eb607407145bc9619351dc93b # pin@v2
        with:
          files: /var/tmp/codecovs/cover_lte.xml,/var/tmp/codecovs/cover_orc8r.xml
          flags: lte-test
      - name: Extract commit title
        if: failure() && github.event_name == 'push'
        id: commit
        run: |
          str="$(jq '.head_commit.message' $GITHUB_EVENT_PATH)"    # get the head_commit message
          echo ::set-output name=title::${str%%\\n*} | tr -d '"'
