---
name: build-all

on:
  workflow_dispatch: null
  push:
    branches:
      - master
      - 'v1.*'
  pull_request:
    branches:
      - master
      - 'v1.*'
    types: [ opened, reopened, synchronize ]

jobs:
  agw-build:
    runs-on: macos-12
    outputs:
      artifacts: ${{ steps.publish_packages.outputs.artifacts }}
    steps:
      - uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e # pin@v2
        with:
          fetch-depth: 0
      - name: Cache magma-dev-box
        uses: actions/cache@0865c47f36e68161719c5b124609996bb5c40129 # pin@v3
        with:
          path: ~/.vagrant.d/boxes/magmacore-VAGRANTSLASH-magma_dev
          key: vagrant-box-magma-dev-v1.1.20210618-patched
      - uses: actions/setup-python@7f80679172b057fc5e90d70d197929d454754a5a # pin@v2
        with:
          python-version: '3.8.10'
      - name: Install pre requisites
        run: |
          pip3 install --upgrade pip
          pip3 install ansible fabric3 jsonpickle requests PyYAML
          vagrant plugin install vagrant-vbguest vagrant-disksize vagrant-vbguest vagrant-mutate
      - name: Open up network interfaces for VM
        run: |
          sudo mkdir -p /etc/vbox/
          sudo touch /etc/vbox/networks.conf
          sudo sh -c "echo '* 192.168.0.0/16' > /etc/vbox/networks.conf"
          sudo sh -c "echo '* 3001::/64' >> /etc/vbox/networks.conf"
      - name: Build AGW
        run: |
          cd lte/gateway
          fab release package:destroy_vm=True
          mkdir magma-packages
          vagrant ssh -c "cp -r magma-packages /vagrant"
      - name: Publish debian packages
        id: publish_packages
        if: github.event_name == 'push'
        run: |
          cd lte/gateway/magma-packages
          ARTIFACTS='{"packages":[],"valid":false}'
          PUBLISH_ERROR="false"
          for i in `ls -a1 *.deb`
          do
            echo "Pushing package $i to JFROG artifiactory: https://artifactory.magmacore.org/artifactory/debian-test/pool"
            HTTP_RESPONSE=$(curl --silent --write-out "HTTPSTATUS:%{http_code}" -uci-bot:${{ secrets.JFROG_CIBOT_APIKEYS }} -XPUT "https://artifactory.magmacore.org/artifactory/debian-test/pool/focal-ci/$i;deb.distribution=focal-ci;deb.component=main;deb.architecture=amd64" -T $i)
            echo "$HTTP_RESPONSE"
            # extract the body and download uri
            HTTP_BODY=$(echo $HTTP_RESPONSE | sed -e 's/HTTPSTATUS\:.*//g')
            URI=$(echo $HTTP_BODY | jq -r '.uri')
            if [[ "$URI" != "null" ]]; then
              ARTIFACTS=$(echo $ARTIFACTS | jq --arg uri $URI '.packages += [$uri]')
            else
              PUBLISH_ERROR="true"
            fi
            # extract and check status
            HTTP_STATUS=$(echo $HTTP_RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
            if [[ "$HTTP_STATUS" != "2"* ]]; then
              PUBLISH_ERROR="true"
            fi
          done
          # set output
          if [[ "$PUBLISH_ERROR" != "true" ]]; then
            ARTIFACTS=$(echo $ARTIFACTS | jq '. += {"valid":true}')
          fi
          echo "::set-output name=artifacts::$(echo $ARTIFACTS)"
      - uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # pin@v3
        if: github.event_name == 'pull_request'
        with:
          name: magma-packages
          path: lte/gateway/magma-packages/*.deb
      - uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # pin@v3
        name: Export sentry executables
        if: github.event_name == 'push'
        with:
          name: sentry-exec
          path: lte/gateway/magma-packages
      - name: Extract commit title
        # yamllint enable
        if: github.event_name == 'push'
        id: commit
        run: |
          str="$(jq '.head_commit.message' $GITHUB_EVENT_PATH)"    # get the head_commit message
          echo ::set-output name=title::${str%%\\n*} | tr -d '"'
      - name: Notify failure to slack
        if: failure() && github.event_name == 'push'
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: "Github action agw build failed"
          SLACK_AVATAR: ":boom:"
        uses: Ilshidur/action-slack@689ad44a9c9092315abd286d0e3a9a74d31ab78a # pin@2.1.0
        with:
          args: "AGW  build failed on [${{github.sha}}](${{github.event.repository.owner.html_url}}/magma/commit/${{github.sha}}): ${{ steps.commit.outputs.title}}"
      # Notify ci channel when push succeeds
      - name: Notify success to Slack
        if: success() && github.event_name == 'push'
        env:
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL_ARTIFACTS }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_OSS }}
          SLACK_USERNAME: "Github action agw build got published"
        uses: Ilshidur/action-slack@689ad44a9c9092315abd286d0e3a9a74d31ab78a # pin@2.1.0
        with:
          args: "AGW  build succeeded on [${{github.sha}}](${{github.event.repository.owner.html_url}}/magma/commit/${{github.sha}}): ${{ steps.commit.outputs.title}}"
